# general
spring.application.name=write-it
server.servlet.context-path=/writeit

# server port
# can be overridden by environment variable SERVER_PORT
server.port=${SERVER_PORT:1000}

# logging
# show only warnings by default -> cleaner console, easier to read
# can be overridden by environment variable LOG_LEVEL
logging.level.root=${LOG_LEVEL:warn}
# dis play SQL queries
logging.level.org.hibernate.SQL=debug
# display the parameters of the SQL queries
logging.level.org.hibernate.orm.jdbc.bind=trace


# actuator
# only expose safe endpoints by default; override in dev if needed
# use the variable MANAGEMENT_ENDPOINTS
# management.endpoints.web.exposure.include=${MANAGEMENT_ENDPOINTS:info,health}
# management.info.env.enabled=true

# app info
# info.app.name=WriteIt
# info.app.description=WriteIt is a tool for writers.
# info.app.version=0.0.1-SNAPSHOT

# security
# basic auth user for actuator, endpoints
# add a security class later on to secure the endpoints
spring.security.user.name=rinthuyen
spring.security.user.password=rinthuyen

# session 
server.servlet.session.timeout=30m

# database connection
# aaa i need to change this later on such that it works for anh Rin, too
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/writeit
spring.datasource.username=rinthuyen
spring.datasource.password=Thuyenrin123!

# configure to auto create the database schema
# for dev (keep data)
# spring.jpa.hibernate.ddl-auto=update
# for testing data (all data is lost when the app stops)
spring.jpa.hibernate.ddl-auto=create-only
# for production, use validate or none
# because.... should hibernate be allowed to change the schema?
# spring.jpa.hibernate.ddl-auto=validate
# later on, ook into DBAs run SQL scripts to update the schema instead of using hibernate

# banner
# turn it off so it's cleaner in the console
spring.main.banner-mode=off

# disable the open-in-view feature to not keep the session open for a long time 
# -> avoid unexpected behavior & lazy-loading issues 
spring.jpa.open-in-view=false

# only consider this if starting the app takes too long
# no class is loaded until it is needed, optimizing startup time, but is it worth it?
# spring.main.lazy-initialization=true

# jwt
# hard code it with a random secret key for now, look into secret managers later on
# jwt.secret=${APP_JWT_SECRET}
jwt.secret=m9xH+kJ8z3gk!sPw4BLuZdF%L5K@qB7&v$Ny^wZ2MeXe@VrRtPj#1AbUqLjVmN$t
# the token expires after an hour
jwt.access-token.expiration-ms=3600000
jwt.refresh-token.expiration-days=7